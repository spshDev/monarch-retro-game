shader_type canvas_item;
render_mode unshaded, skip_vertex_transform;

const float curvature = 7.0;
const float vignette_multiplier = 1.1;

uniform sampler2D screen_texture: hint_screen_texture, filter_linear_mipmap;

void fragment() {
	vec2 centred_uv = SCREEN_UV * 2.0 - 1.0;
	vec2 uv_offset = centred_uv.yx / curvature;
	vec2 warped_uv = centred_uv + centred_uv * uv_offset * uv_offset;
	vec3 cutoff = vec3(step(abs(warped_uv.x), 1.0 * step(abs(warped_uv.y), 1.0)));
	vec3 scanlines = vec3(sin(2.0 * warped_uv.y * 360.0) * 0.1 + 0.9);
	vec3 vignette = vec3(length(pow(abs(centred_uv), vec2(4.0)) / 3.0));
	
	vec3 screen_color = textureLod(screen_texture, (warped_uv+1.0) / 2.0,0.2).rgb * cutoff * scanlines;
	screen_color -= vignette * vignette_multiplier;
	//COLOR = vec4(warped_uv, 0.0, 1.0);
	COLOR = vec4(screen_color, 1.0);
}


